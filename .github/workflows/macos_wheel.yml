name: Build TA-Lib wheels for MacOS

on:
  workflow_dispatch:

env:
  TALIB_C_VER: 0.6.2
  TALIB_PY_VER: 0.6.0
  PIP_NO_VERIFY: 0
  PIP_VERBOSE: 1
  CIBW_BUILD_VERBOSITY: 2
  CIBW_BEFORE_BUILD: pip install -U setuptools wheel numpy Cython
  CIBW_TEST_REQUIRES: pytest pandas polars
  CIBW_TEST_COMMAND: >
    cd .. &&
    pytest --rootdir=C: -k "not RSI and not threading" {project}/tests
  CIBW_TEST_SKIP: "*win32 cp37* cp38* cp39*"
  CIBW_SKIP: "pp* cp36*"

jobs:
  build_x86_64:
    name: Build MacOS x86_64 ${{ matrix.python-version }} wheels
    strategy:
      matrix:
        os: [macos-14-large]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get MacOS version
        run: | 
          MACOS_VERSION=$(sw_vers -productVersion | cut -d. -f1,2 | tr . _)
          echo "MACOS_VERSION=${MACOS_VERSION}" >> $GITHUB_ENV
      - name: Install Xcode Command Line Tools
        run: xcode-select --install
      - name: Install Homebrew
        run: |
          /bin/bash
      - name: Make script executable
        run: chmod +x build_macos.sh
      - name: Build TA-Lib
        run: ./build_macos.sh
        shell: bash
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS_MACOS: x86_64
          CIBW_ENVIRONMENT_MACOS : >
            TA_LIBRARY_PATH="ta-lib-$TALIB_C_VER/_build;$LIB"
            TA_INCLUDE_PATH="ta-lib-$TALIB_C_VER/include;$INCLUDE"
            PIP_NO_BUILD_ISOLATION=false
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        env:
          WHEEL_NAME: "ta_lib-${TALIB_PY_VER}-cp${PY_VER//./}-cp${PY_VER//./}-macos_${MACOS_VERSION//./_}_x86_64.whl"
        with:
          path: ./wheelhouse/*.whl
          name: ${{ env.WHEEL_NAME }}
  build_arm64:
    name: Build MacOS arm64 ${{ matrix.python-version }} wheels
    strategy:
      matrix:
        os: [macos-14-xlarge]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get MacOS version
        run: | 
          MACOS_VERSION=$(sw_vers -productVersion | cut -d. -f1,2 | tr . _)
          echo "MACOS_VERSION=${MACOS_VERSION}" >> $GITHUB_ENV
      - name: Install Xcode Command Line Tools
        run: xcode-select --install
      - name: Install Homebrew
        run: |
          /bin/bash
      - name: Make script executable
        run: chmod +x build_macos.sh
      - name: Build TA-Lib
        run: ./build_macos.sh
        shell: bash
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS_MACOS: ARM64
          CIBW_ENVIRONMENT_MACOS : >
            TA_LIBRARY_PATH="${{ github.workspace }}/ta-lib-${{ env.TALIB_C_VER }}/_build"
            TA_INCLUDE_PATH="${{ github.workspace }}/ta-lib-${{ env.TALIB_C_VER }}/include"
            PIP_NO_BUILD_ISOLATION=false
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: "auditwheel repair --lib-sdir ta-lib-${{ env.TALIB_C_VER }}/_build -w {dest_dir} {wheel}"
      - name: Set wheel name
        run: |
          echo "WHEEL_NAME=ta_lib-${{env.TALIB_PY_VER}}-cp${PY_VER//./}-cp${PY_VER//./}-macosx_${MACOS_VERSION//./_}_arm64.whl" >> $GITHUB_ENV
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: ${{ env.WHEEL_NAME }}
